// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Visual Regression - Accessibility States > High Contrast Mode > should maintain accessibility compliance in high contrast mode > high-contrast-accessibility.json 1`] = `
{
  "hc-button": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderWidth": undefined,
    "color": "canvastext",
    "outline": undefined,
    "textDecoration": undefined,
  },
  "hc-focus": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderWidth": undefined,
    "color": "canvastext",
    "outline": undefined,
    "textDecoration": undefined,
  },
  "hc-input": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderWidth": undefined,
    "color": "canvastext",
    "outline": undefined,
    "textDecoration": undefined,
  },
  "hc-link": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderWidth": undefined,
    "color": "canvastext",
    "outline": undefined,
    "textDecoration": undefined,
  },
}
`;

exports[`Visual Regression - Component States > Badge Component Visual States > should maintain consistent badge styling across variants > badge-variants-visual.json 1`] = `
{
  "default": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
  "destructive": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
  "outline": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
  "secondary": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
  "success": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
  "warning": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
}
`;

exports[`Visual Regression - Component States > Button Component Visual States > should maintain consistent sizing across button sizes > button-sizes-visual-states.json 1`] = `
{
  "default": {
    "fontSize": "",
    "height": "auto",
    "padding": "",
  },
  "icon": {
    "fontSize": "",
    "height": "auto",
    "padding": "",
  },
  "lg": {
    "fontSize": "",
    "height": "auto",
    "padding": "",
  },
  "sm": {
    "fontSize": "",
    "height": "auto",
    "padding": "",
  },
}
`;

exports[`Visual Regression - Component States > Button Component Visual States > should properly apply hover and focus states > button-interaction-states.json 1`] = `
{
  "active": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
  "default": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
  "disabled": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
  "focus": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
  "hover": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
}
`;

exports[`Visual Regression - Component States > Card Component Visual States > should maintain consistent card styling and shadows > card-variants-visual.json 1`] = `
{
  "default": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
  "elevated": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
  "ghost": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
  "outlined": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
}
`;

exports[`Visual Regression - Component States > Input Component Visual States > should maintain consistent input styling across states > input-states-visual.json 1`] = `
{
  "default": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
  "disabled": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
  "error": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
  "focus": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
}
`;

exports[`Visual Regression - Responsive States > Desktop Viewport Visual States > should maintain consistent desktop styling > desktop-responsive-states.json 1`] = `
{
  "desktop-button": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
  "desktop-card": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
  "desktop-input": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
  "desktop-text": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
}
`;

exports[`Visual Regression - Responsive States > Mobile Viewport Visual States > should maintain consistent mobile styling > mobile-responsive-states.json 1`] = `
{
  "mobile-button": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
  "mobile-card": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
  "mobile-input": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
  "mobile-text": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "borderColor": "",
    "borderRadius": "",
    "boxShadow": "",
    "color": "canvastext",
    "fontSize": "",
    "fontWeight": "",
    "margin": "",
    "opacity": "",
    "padding": "",
    "transform": "",
    "transition": "",
  },
}
`;

exports[`Visual Regression - Theme Consistency > Dark Theme Visual States > should maintain consistent color mapping in dark theme > dark-theme-colors.json 1`] = `
{
  "accent": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "color": "canvastext",
  },
  "background": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "color": "canvastext",
  },
  "card": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "color": "canvastext",
  },
  "destructive": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "color": "canvastext",
  },
  "muted": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "color": "canvastext",
  },
  "popover": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "color": "canvastext",
  },
  "primary": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "color": "canvastext",
  },
  "secondary": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "color": "canvastext",
  },
}
`;

exports[`Visual Regression - Token Application Accuracy > MFB Brand Token Application > should correctly apply MFB brand tokens to components > mfb-brand-token-application.json 1`] = `
{
  "mfb-accent": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "color": "canvastext",
  },
  "mfb-neutral": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "color": "canvastext",
  },
  "mfb-primary": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "color": "canvastext",
  },
  "mfb-secondary": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "color": "canvastext",
  },
}
`;

exports[`Visual Regression - Token Application Accuracy > Semantic Token Mapping Accuracy > should correctly map semantic tokens to visual properties > semantic-token-mappings.json 1`] = `
{
  "destructive-mapping": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "color": "canvastext",
  },
  "muted-mapping": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "color": "canvastext",
  },
  "primary-mapping": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "color": "canvastext",
  },
  "success-mapping": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "color": "canvastext",
  },
  "warning-mapping": {
    "backgroundColor": "rgba(0, 0, 0, 0)",
    "color": "canvastext",
  },
}
`;
