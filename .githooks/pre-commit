#!/bin/sh

# Pre-commit hook for technical debt management
# This hook runs before each commit to check for new technical debt

echo "üîç Running technical debt checks..."

# Check for new TODO comments without GitHub issues
NEW_TODOS=$(git diff --cached --name-only | xargs grep -l "TODO\|FIXME\|HACK" 2>/dev/null || true)

if [ ! -z "$NEW_TODOS" ]; then
  echo "‚ö†Ô∏è  New technical debt detected in staged files:"
  echo "$NEW_TODOS" | while read file; do
    echo "  üìÑ $file"
    git diff --cached "$file" | grep -E "^\+.*TODO|^\+.*FIXME|^\+.*HACK" | head -3 | sed 's/^+/    /'
  done
  
  echo ""
  echo "üìã Please ensure all TODO comments:"
  echo "  1. Link to GitHub issues: // TODO [#123]: Description"
  echo "  2. Are tracked in docs/technical-debt/registry.md"
  echo "  3. Have feature flags if they affect user functionality"
  echo ""
  echo "To bypass this check: git commit --no-verify"
  echo "To create GitHub issues: node scripts/create-technical-debt-issues.js"
  echo ""
  
  # Don't block commit, just warn
  # exit 1
fi

# Run ESLint on staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(ts|tsx)$' || true)

if [ ! -z "$STAGED_FILES" ]; then
  echo "üîß Running ESLint on staged files..."
  
  # Only check staged TypeScript files
  npm run lint -- $STAGED_FILES --quiet --format=compact || {
    echo "‚ùå ESLint found issues. Please fix them before committing."
    echo "   You can auto-fix some issues with: npm run lint -- --fix"
    exit 1
  }
  
  # Run UI/UX compliance checks specifically
  echo "üé® Running UI/UX compliance checks..."
  npm run lint:ui -- $STAGED_FILES --quiet --format=compact || {
    echo "‚ùå UI/UX compliance issues found. Common fixes:"
    echo "   ‚Ä¢ Replace bg-[var(--mfb-cream)] with bg-mfb-cream"
    echo "   ‚Ä¢ Replace text-[var(--mfb-green)] with text-mfb-green"  
    echo "   ‚Ä¢ Replace calc() expressions with standardized spacing"
    echo "   ‚Ä¢ Replace vh units with standard height tokens"
    exit 1
  }
fi

# Check feature flags configuration
if [ -f "src/lib/feature-flags.ts" ]; then
  TBD_COUNT=$(grep -c "githubIssue: \"#TBD\"" src/lib/feature-flags.ts || echo "0")
  if [ "$TBD_COUNT" -gt "0" ]; then
    echo "‚ö†Ô∏è  $TBD_COUNT feature flags still have '#TBD' GitHub issues"
    echo "   Consider creating proper GitHub issues for tracking"
  fi
fi

echo "‚úÖ Technical debt checks completed"